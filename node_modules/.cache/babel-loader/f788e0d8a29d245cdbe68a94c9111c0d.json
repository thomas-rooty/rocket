{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artho\\\\Desktop\\\\COURS IPSSI\\\\Fondamentaux Web, GIT\\\\5\\\\rocket\\\\src\\\\Components\\\\MusicPlayer\\\\MusicPlayer.js\";\nimport React, { Component } from 'react';\nimport './MusicPlayer.css'; //icons\n\nimport VolumeUp from \"../icons/VolumeUppIcon.svg\";\nimport VolumeOffIcon from \"../icons/VolumeDownIcon.svg\";\nimport VolumeDown from \"../icons/VolumeOffIcon.svg\";\nimport ReplayIcon from \"../icons/loop.svg\";\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport SkipNextIcon from \"../icons/next.svg\";\nimport SkipPreviousIcon from \"../icons/previous.svg\";\nimport PlayIcon from \"../icons/play.svg\";\nimport PauseIcon from \"../icons/pause.svg\";\nimport BlankIcon from '../icons/blank.png'; // api\n\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport SliderMui from '../slider/Slider';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport getMusic from '../../api/getMusic';\nimport searchSongs from '../../api/searchSongs'; // DEV\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction secondsToHms(seconds) {\n  if (!seconds) return '00m 00s';\n  let duration = seconds;\n  let hours = duration / 3600;\n  duration = duration % 3600;\n  let min = parseInt(duration / 60);\n  duration = duration % 60;\n  let sec = parseInt(duration);\n\n  if (sec < 10) {\n    sec = `0${sec}`;\n  }\n\n  if (min < 10) {\n    min = `0${min}`;\n  }\n\n  if (parseInt(hours, 10) > 0) {\n    return `${parseInt(hours, 10)}h ${min}m ${sec}s`;\n  } else if (min == 0) {\n    return `00m ${sec}s`;\n  } else {\n    return `${min}m ${sec}s`;\n  }\n}\n\nfunction LinearProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        mr: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n        variant: \"determinate\",\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        minWidth: 35\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: secondsToHms(props.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LinearProgressWithLabel;\n\nclass MusicPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedDataMusic: false,\n      play: false,\n      audio: new Audio(),\n      data: [],\n      firstLog: false,\n      reload: false,\n      volume: 100,\n      load: false,\n      currentmp3: '',\n      currentPictures: '',\n      currentMusicId: '',\n      currentAlbum: '',\n      currentAuteur: '',\n      currentGenre: '',\n      currentTitre: '',\n      currentDuration: 0,\n      currentPlayed: 0,\n      currentMusicIndex: 0,\n      currentSongEnd: false,\n      currentFavorite: false\n    };\n    this.myRef = /*#__PURE__*/React.createRef();\n    this.killAudio = this.killAudio.bind(this);\n    this.UpIndex = this.UpIndex.bind(this);\n    this.DownIndex = this.DownIndex.bind(this);\n    this.loop = this.loop.bind(this);\n    this.PlayMusic = this.PlayMusic.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.TrackChangeMusic = this.TrackChangeMusic.bind(this);\n    this.searchTracks = this.searchTracks.bind(this);\n    this.GetFavMusicUser = this.GetFavMusicUser.bind(this);\n    this.addFav = this.addFav.bind(this);\n    this.deleteFav = this.deleteFav.bind(this);\n  }\n\n  componentDidMount() {\n    this.state.audio.pause();\n    getMusic().then(result => {\n      this.setState({\n        data: result\n      });\n    }).then(getFavUser(localStorage.getItem(TOKEN_KEY)).then(fav => {\n      fav.map(rowfav => {\n        this.state.data.map(x => {\n          if (x['favorite'] === false || x['favorite'] === undefined) {\n            if (x['MusicID'] === rowfav['MusicID']) {\n              x['favorite'] = true;\n            } else {\n              x['favorite'] = false;\n            }\n          }\n        });\n      });\n      this.setState({\n        firstLog: true,\n        currentmp3: this.state.data[this.state.currentMusicIndex]['mp3'],\n        currentPictures: this.state.data[this.state.currentMusicIndex]['Pictures'],\n        currentMusicId: this.state.data[this.state.currentMusicIndex]['MusicID'],\n        currentAlbum: this.state.data[this.state.currentMusicIndex]['Album'],\n        currentAuteur: this.state.data[this.state.currentMusicIndex]['Auteur'],\n        currentGenre: this.state.data[this.state.currentMusicIndex]['Genre'],\n        currentTitre: this.state.data[this.state.currentMusicIndex]['Titre'],\n        currentFavorite: this.state.data[this.state.currentMusicIndex]['favorite'],\n        currentSongEnd: false,\n        audio: new Audio(this.state.data[this.state.currentMusicIndex]['mp3']),\n        currentLoop: false\n      }, () => {\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentDuration: e.target.duration\n          });\n        });\n        this.state.audio.addEventListener('ended', e => {\n          this.detectChangeMusic(this.state.currentMusicIndex);\n        });\n      });\n    }));\n  }\n\n  searchTracks(e) {\n    if (e.target.value == '') {\n      this.state.audio.pause();\n      getMusic().then(result => {\n        this.setState({\n          firstLog: true,\n          data: result\n        });\n      }).then(getFavUser(localStorage.getItem(TOKEN_KEY)).then(fav => {\n        fav.map(rowfav => {\n          this.state.data.map(x => {\n            if (x['favorite'] === false || x['favorite'] === undefined) {\n              if (x['MusicID'] === rowfav['MusicID']) {\n                x['favorite'] = true;\n              } else {\n                x['favorite'] = false;\n              }\n            }\n          });\n        });\n      }));\n    } else {\n      searchSongs(e.target.value).then(songs => {\n        this.setState({\n          data: songs\n        });\n      }).then(getFavUser(localStorage.getItem(TOKEN_KEY)).then(fav => {\n        fav.map(rowfav => {\n          this.state.data.map(x => {\n            if (x['favorite'] === false || x['favorite'] === undefined) {\n              if (x['MusicID'] === rowfav['MusicID']) {\n                x['favorite'] = true;\n              } else {\n                x['favorite'] = false;\n              }\n            }\n          });\n        });\n      }));\n    }\n  }\n\n  TrackChangeMusic(x) {\n    this.killAudio(x);\n    this.setState({\n      currentmp3: this.state.data[x]['mp3'],\n      currentPictures: this.state.data[x]['Pictures'],\n      currentMusicId: this.state.data[x]['MusicID'],\n      currentAlbum: this.state.data[x]['Album'],\n      currentAuteur: this.state.data[x]['Auteur'],\n      currentFavorite: this.state.data[x]['favorite'],\n      currentGenre: this.state.data[x]['Genre'],\n      currentTitre: this.state.data[x]['Titre'],\n      audio: new Audio(this.state.data[x]['mp3']),\n      currentLoop: false\n    }, () => {\n      this.state.audio.play();\n      this.state.audio.addEventListener('loadedmetadata', e => {\n        this.setState({\n          currentDuration: e.target.duration\n        });\n      });\n      this.state.audio.addEventListener('ended', e => {\n        this.detectChangeMusic(this.state.currentMusicIndex);\n      });\n    });\n  }\n\n  killAudio(x) {\n    this.state.audio.pause();\n    this.setState({\n      play: true,\n      currentMusicIndex: x\n    });\n  } //FAV\n\n\n  GetFavMusicUser() {\n    getFavUser(localStorage.getItem(TOKEN_KEY)).then(result => {\n      result.map(x => {\n        x['favorite'] = true;\n      });\n      this.setState({\n        data: result\n      });\n    });\n  }\n\n  addFav(musicID, token) {\n    addFavUser(token, musicID).then(x => {\n      this.state.data.map(row => {\n        if (row['MusicID'] === musicID) {\n          row['favorite'] = true;\n          this.setState({\n            reload: true\n          }, () => {\n            this.setState({\n              reload: false\n            });\n          });\n        }\n      });\n\n      if (musicID === this.state.currentMusicId) {\n        this.setState({\n          currentFavorite: true\n        });\n      }\n    });\n  }\n\n  deleteFav(musicID, token) {\n    deleteFavUser(token, musicID).then(x => {\n      this.state.data.map(row => {\n        if (row['MusicID'] === musicID) {\n          row['favorite'] = false;\n          this.setState({\n            reload: true\n          }, () => {\n            this.setState({\n              reload: false\n            });\n          });\n        }\n      });\n\n      if (musicID === this.state.currentMusicId) {\n        this.setState({\n          currentFavorite: false\n        });\n      }\n    });\n  }\n\n  detectChangeMusic(x) {\n    if (x + 1 < this.state.data.length) {\n      this.state.audio.pause();\n      this.setState({\n        play: true,\n        currentMusicIndex: x + 1,\n        currentmp3: this.state.data[x + 1]['mp3'],\n        currentPictures: this.state.data[x + 1]['Pictures'],\n        currentMusicId: this.state.data[x + 1]['MusicID'],\n        currentAlbum: this.state.data[x + 1]['Album'],\n        currentAuteur: this.state.data[x + 1]['Auteur'],\n        currentGenre: this.state.data[x + 1]['Genre'],\n        currentTitre: this.state.data[x + 1]['Titre'],\n        currentFavorite: this.state.data[[x + 1]]['favorite'],\n        audio: new Audio(this.state.data[x + 1]['mp3']),\n        currentSongEnd: false,\n        currentLoop: false,\n        load: true\n      }, () => {\n        this.state.audio.play();\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentDuration: e.target.duration,\n            load: false\n          });\n        });\n        this.state.audio.addEventListener('ended', e => {\n          this.detectChangeMusic(this.state.currentMusicIndex);\n        });\n      });\n    } else {\n      this.setState({\n        play: false\n      });\n      this.state.audio.pause();\n    }\n  }\n\n  UpIndex() {\n    let x = this.state.currentMusicIndex + 1;\n\n    if (x < this.state.data.length) {\n      this.killAudio(x);\n      this.setState({\n        currentMusicId: this.state.data[x]['MusicId'],\n        currentmp3: this.state.data[x]['mp3'],\n        currentPictures: this.state.data[x]['Pictures'],\n        currentMusicId: this.state.data[x]['MusicID'],\n        currentAlbum: this.state.data[x]['Album'],\n        currentAuteur: this.state.data[x]['Auteur'],\n        currentGenre: this.state.data[x]['Genre'],\n        currentFavorite: this.state.data[x]['favorite'],\n        currentTitre: this.state.data[x]['Titre'],\n        audio: new Audio(this.state.data[x]['mp3']),\n        currentSongEnd: false,\n        currentLoop: false\n      }, () => {\n        this.state.audio.play();\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentDuration: e.target.duration\n          });\n        });\n        this.state.audio.addEventListener('ended', e => {\n          this.detectChangeMusic(this.state.currentMusicIndex);\n        });\n      });\n    }\n  }\n\n  DownIndex() {\n    let x = this.state.currentMusicIndex - 1;\n\n    if (x >= 0) {\n      this.killAudio(x);\n      this.setState({\n        currentMusicId: this.state.data[x]['MusicId'],\n        currentmp3: this.state.data[x]['mp3'],\n        currentPictures: this.state.data[x]['Pictures'],\n        currentMusicId: this.state.data[x]['MusicID'],\n        currentAlbum: this.state.data[x]['Album'],\n        currentAuteur: this.state.data[x]['Auteur'],\n        currentGenre: this.state.data[x]['Genre'],\n        currentTitre: this.state.data[x]['Titre'],\n        currentFavorite: this.state.data[x]['favorite'],\n        audio: new Audio(this.state.data[x]['mp3']),\n        currentSongEnd: false,\n        currentLoop: false\n      }, () => {\n        this.state.audio.play();\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentDuration: e.target.duration\n          });\n        });\n        this.state.audio.addEventListener('ended', e => {\n          this.detectChangeMusic(this.state.currentMusicIndex);\n        });\n      });\n    }\n  }\n\n  loop() {\n    this.setState({\n      currentLoop: this.state.currentLoop ? false : true\n    }, () => {\n      this.state.audio.loop = this.state.currentLoop;\n    });\n  }\n\n  PlayMusic(state) {\n    if (state === 'play') {\n      this.state.audio.play();\n      this.setState({\n        play: true\n      });\n    } else if (state === 'pause') {\n      this.state.audio.pause();\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      volume: e.target.value\n    });\n  }\n\n  onChange(e) {\n    var x = this.state.currentDuration / 100 * e.target.value;\n\n    if (x >= this.state.currentDuration) {\n      this.state.audio.pause();\n      this.setState({\n        play: true,\n        currentMusicIndex: x + 1,\n        currentMusicId: this.state.data[this.state.currentIndex]['MusicId'],\n        currentmp3: this.state.data[this.state.currentIndex]['mp3'],\n        currentPictures: this.state.data[this.state.currentIndex]['Pictures'],\n        currentMusicId: this.state.data[this.state.currentIndex]['PMusicId'],\n        currentAlbum: this.state.data[this.state.currentIndex]['Album'],\n        currentAuteur: this.state.data[this.state.currentIndex]['Auteur'],\n        currentGenre: this.state.data[this.state.currentIndex]['Genre'],\n        currentTitre: this.state.data[this.state.currentIndex]['Titre'],\n        audio: new Audio(this.state.data[this.state.currentIndex]['mp3']),\n        currentSongEnd: false,\n        currentLoop: false,\n        load: true\n      }, () => {\n        this.state.audio.play();\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentDuration: e.target.duration,\n            load: false\n          });\n        });\n        this.state.audio.addEventListener('loadedmetadata', e => {\n          this.setState({\n            currentSongEnd: true\n          });\n        });\n      });\n    } else {\n      this.state.audio.currentTime = x;\n      this.setState({\n        currentPlayed: x\n      });\n    }\n  }\n\n  render() {\n    setTimeout(() => {\n      if (this.state.play) {\n        this.setState({\n          currentPlayed: this.state.audio.currentTime\n        });\n      }\n    }, 500);\n    this.state.audio.volume = this.state.volume / 100;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"musicInfos\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"picturesPlayer\",\n            style: {\n              backgroundImage: `url(${this.state.currentPictures})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nameSong\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: this.state.currentTitre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContentPlayer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indicatorPlayer\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ReplayIcon,\n              onClick: this.loop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: SkipPreviousIcon,\n              onClick: this.DownIndex,\n              style: {\n                color: this.state.currentMusicIndex - 1 < 0 && '#F8F8F8'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), !this.state.play ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PlayIcon,\n              onClick: () => {\n                this.PlayMusic('play');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: PauseIcon,\n              onClick: () => {\n                this.PlayMusic('pause');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: SkipNextIcon,\n              onClick: this.UpIndex,\n              style: {\n                color: this.state.currentMusicIndex + 1 > this.state.data.length - 1 && '#F8F8F8'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: BlankIcon,\n              style: {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ProgressBarPlayer\",\n            style: {\n              width: \"50%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(SliderMui, {\n              percentage: this.state.firstLog && this.state.currentPlayed / this.state.currentDuration * 100,\n              onChange: this.onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"volumeSlider\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 2,\n              direction: \"row\",\n              sx: {\n                mb: 1\n              },\n              alignItems: \"center\",\n              children: [this.state.volume > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: VolumeOffIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                src: VolumeDown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Slider, {\n                \"aria-label\": \"Volume\",\n                value: this.state.volume,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: VolumeUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ListOfTracks\",\n        children: this.state.data.length > 0 && this.state.data.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Tracks\",\n          onClick: () => {\n            this.TrackChangeMusic(index);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: row.Pictures\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"titreTest\",\n            children: row.Titre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: row.Auteur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: row.Genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 19\n          }, this)]\n        }, row.MusicID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 7\n    }, this);\n  }\n\n} //  MusicPlayer(){\n//\n// }\n\n\nexport default MusicPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinearProgressWithLabel\");","map":{"version":3,"sources":["C:/Users/artho/Desktop/COURS IPSSI/Fondamentaux Web, GIT/5/rocket/src/Components/MusicPlayer/MusicPlayer.js"],"names":["React","Component","PlayArrowIcon","BlankIcon","LinearProgress","Typography","Box","SliderMui","Stack","Slider","getMusic","searchSongs","secondsToHms","seconds","duration","hours","min","parseInt","sec","LinearProgressWithLabel","props","display","alignItems","width","mr","minWidth","MusicPlayer","constructor","state","loadedDataMusic","play","audio","Audio","data","firstLog","reload","volume","load","currentmp3","currentPictures","currentMusicId","currentAlbum","currentAuteur","currentGenre","currentTitre","currentDuration","currentPlayed","currentMusicIndex","currentSongEnd","currentFavorite","myRef","createRef","killAudio","bind","UpIndex","DownIndex","loop","PlayMusic","onChange","handleChange","TrackChangeMusic","searchTracks","GetFavMusicUser","addFav","deleteFav","componentDidMount","pause","then","result","setState","getFavUser","localStorage","getItem","TOKEN_KEY","fav","map","rowfav","x","undefined","currentLoop","addEventListener","e","target","detectChangeMusic","value","songs","musicID","token","addFavUser","row","deleteFavUser","length","currentIndex","currentTime","render","setTimeout","backgroundImage","ReplayIcon","SkipPreviousIcon","color","PlayIcon","PauseIcon","SkipNextIcon","mb","VolumeOffIcon","VolumeDown","VolumeUp","index","Pictures","Titre","Auteur","Genre","MusicID"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './MusicPlayer.css';\n\n//icons\nimport VolumeUp from '../icons/VolumeUppIcon.svg';\nimport VolumeOffIcon from '../icons/VolumeDownIcon.svg';\nimport VolumeDown from '../icons/VolumeOffIcon.svg';\nimport ReplayIcon from '../icons/loop.svg';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport SkipNextIcon from '../icons/next.svg';\nimport SkipPreviousIcon from '../icons/previous.svg';\nimport PlayIcon from '../icons/play.svg';\nimport PauseIcon from '../icons/pause.svg';\nimport BlankIcon from '../icons/blank.png';\n\n// api\n\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport SliderMui from '../slider/Slider';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\n\nimport getMusic from '../../api/getMusic';\nimport searchSongs from '../../api/searchSongs';\n\n// DEV\nfunction secondsToHms(seconds) {\n  if (!seconds) return '00m 00s'\n\n  let duration = seconds\n  let hours = duration / 3600\n  duration = duration % 3600\n\n  let min = parseInt(duration / 60)\n  duration = duration % 60\n\n  let sec = parseInt(duration)\n\n  if (sec < 10) {\n    sec = `0${sec}`\n  }\n  if (min < 10) {\n    min = `0${min}`\n  }\n\n  if (parseInt(hours, 10) > 0) {\n    return `${parseInt(hours, 10)}h ${min}m ${sec}s`\n  } else if (min == 0) {\n    return `00m ${sec}s`\n  } else {\n    return `${min}m ${sec}s`\n  }\n}\nfunction LinearProgressWithLabel(props) {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n      <Box sx={{ width: '100%', mr: 1 }}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box sx={{ minWidth: 35 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">{secondsToHms(props.duration)}</Typography>\n      </Box>\n    </Box>\n  );\n}\nclass MusicPlayer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedDataMusic: false,\n      play: false,\n      audio: new Audio(),\n      data: [],\n      firstLog: false,\n      reload: false,\n      volume: 100,\n      load : false,\n\n      currentmp3: '',\n      currentPictures: '',\n      currentMusicId: '',\n      currentAlbum: '',\n      currentAuteur: '',\n      currentGenre: '',\n      currentTitre: '',\n      currentDuration: 0,\n      currentPlayed: 0,\n      currentMusicIndex: 0,\n      currentSongEnd : false,\n      currentFavorite : false,\n    }\n    this.myRef = React.createRef()\n    this.killAudio = this.killAudio.bind(this);\n    this.UpIndex = this.UpIndex.bind(this);\n    this.DownIndex = this.DownIndex.bind(this);\n    this.loop = this.loop.bind(this);\n    this.PlayMusic = this.PlayMusic.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.TrackChangeMusic = this.TrackChangeMusic.bind(this);\n    this.searchTracks = this.searchTracks.bind(this);\n    this.GetFavMusicUser = this.GetFavMusicUser.bind(this);\n    this.addFav = this.addFav.bind(this);\n    this.deleteFav = this.deleteFav.bind(this);\n  }\n  componentDidMount() {\n    this.state.audio.pause()\n    getMusic().then(\n      result => {\n        this.setState({\n          data : result\n        })\n    })\n    .then(\n      getFavUser(localStorage.getItem(TOKEN_KEY)).then(\n        fav => {\n          fav.map(\n            rowfav => {\n              this.state.data.map(\n                x => {\n                  if (x['favorite'] === false || x['favorite'] === undefined ){\n                    if(x['MusicID'] === rowfav['MusicID']){\n                      x['favorite'] = true\n                    } else {\n                      x['favorite'] = false\n                    }\n                  }\n                }\n              )\n            }\n          )\n          this.setState({\n            firstLog: true,\n            currentmp3: this.state.data[this.state.currentMusicIndex]['mp3'],\n            currentPictures: this.state.data[this.state.currentMusicIndex]['Pictures'],\n            currentMusicId: this.state.data[this.state.currentMusicIndex]['MusicID'],\n            currentAlbum: this.state.data[this.state.currentMusicIndex]['Album'],\n            currentAuteur: this.state.data[this.state.currentMusicIndex]['Auteur'],\n            currentGenre: this.state.data[this.state.currentMusicIndex]['Genre'],\n            currentTitre: this.state.data[this.state.currentMusicIndex]['Titre'],\n            currentFavorite : this.state.data[this.state.currentMusicIndex]['favorite'],\n            currentSongEnd : false,\n            audio: new Audio(this.state.data[this.state.currentMusicIndex]['mp3']),\n            currentLoop : false,\n          }, () => {\n            this.state.audio.addEventListener('loadedmetadata', (e) => {\n              this.setState({\n                currentDuration: e.target.duration\n              })\n            })\n            this.state.audio.addEventListener('ended', (e) => {\n              this.detectChangeMusic(this.state.currentMusicIndex)\n            })\n          })\n        }\n      )\n    )\n  }\n  searchTracks(e) {\n    if (e.target.value == '') {\n      this.state.audio.pause()\n      getMusic().then(\n        result => {\n          this.setState({\n            firstLog: true,\n            data: result,\n          })\n        }\n      )\n      .then(\n        getFavUser(localStorage.getItem(TOKEN_KEY)).then(\n          fav => {\n            fav.map(\n              rowfav => {\n                this.state.data.map(\n                  x => {\n                    if (x['favorite'] === false || x['favorite'] === undefined ){\n                      if(x['MusicID'] === rowfav['MusicID']){\n                        x['favorite'] = true\n                      } else {\n                        x['favorite'] = false\n                      }\n                    }\n                  }\n                )\n              }\n            )\n          }\n        )\n      )\n    } else {\n      searchSongs(e.target.value).then(\n        songs => {\n          this.setState({\n            data: songs\n          })\n        }\n      )\n      .then(\n        getFavUser(localStorage.getItem(TOKEN_KEY)).then(\n          fav => {\n            fav.map(\n              rowfav => {\n                this.state.data.map(\n                  x => {\n                    if (x['favorite'] === false || x['favorite'] === undefined ){\n                      if(x['MusicID'] === rowfav['MusicID']){\n                        x['favorite'] = true\n                      } else {\n                        x['favorite'] = false\n                      }\n                    }\n                  }\n                )\n              }\n            )\n          }\n        )\n      )\n    }\n\n  }\n  TrackChangeMusic(x) {\n    this.killAudio(x)\n    this.setState({\n      currentmp3: this.state.data[x]['mp3'],\n      currentPictures: this.state.data[x]['Pictures'],\n      currentMusicId: this.state.data[x]['MusicID'],\n      currentAlbum: this.state.data[x]['Album'],\n      currentAuteur: this.state.data[x]['Auteur'],\n      currentFavorite : this.state.data[x]['favorite'],\n      currentGenre: this.state.data[x]['Genre'],\n      currentTitre: this.state.data[x]['Titre'],\n      audio: new Audio(this.state.data[x]['mp3']),\n      currentLoop : false,\n    }, () => {\n      this.state.audio.play()\n      this.state.audio.addEventListener('loadedmetadata', (e) => {\n        this.setState({\n          currentDuration: e.target.duration\n        })\n      })\n      this.state.audio.addEventListener('ended', (e) => {\n        this.detectChangeMusic(this.state.currentMusicIndex)\n      })\n    })\n  }\n  killAudio(x) {\n    this.state.audio.pause()\n    this.setState({\n      play: true,\n      currentMusicIndex: x,\n    })\n  }\n  //FAV\n  GetFavMusicUser(){\n    getFavUser(localStorage.getItem(TOKEN_KEY)).then(\n      result =>\n      {\n        result.map(x => {\n          x['favorite'] = true\n        })\n        this.setState({\n          data : result\n        })\n      }\n    )\n  }\n  addFav(musicID, token){\n    addFavUser(token,musicID)\n    .then(\n      x => {\n        this.state.data.map(\n          row => {\n            if (row['MusicID'] === musicID){\n              row['favorite'] = true\n              this.setState({\n                reload : true\n              }, () =>{\n                this.setState({\n                  reload : false\n                })\n              })\n            }\n          }\n        )\n        if (musicID === this.state.currentMusicId){\n          this.setState({\n            currentFavorite : true\n          })\n        }\n      }\n    )\n\n  }\n  deleteFav(musicID, token){\n    deleteFavUser(token,musicID)\n    .then(\n      x => {\n        this.state.data.map(\n          row => {\n            if (row['MusicID'] === musicID){\n              row['favorite'] = false\n              this.setState({\n                reload : true\n              }, () =>{\n                this.setState({\n                  reload : false\n                })\n              })\n            }\n          }\n        )\n        if (musicID === this.state.currentMusicId){\n          this.setState({\n            currentFavorite : false\n          })\n        }\n      }\n    )\n  }\n\n\n  detectChangeMusic(x){\n    if (x+1 < this.state.data.length) {\n      this.state.audio.pause()\n      this.setState({\n        play: true,\n        currentMusicIndex: x+1,\n        currentmp3: this.state.data[x+1]['mp3'],\n        currentPictures: this.state.data[x+1]['Pictures'],\n        currentMusicId: this.state.data[x+1]['MusicID'],\n        currentAlbum: this.state.data[x+1]['Album'],\n        currentAuteur: this.state.data[x+1]['Auteur'],\n        currentGenre: this.state.data[x+1]['Genre'],\n        currentTitre: this.state.data[x+1]['Titre'],\n        currentFavorite : this.state.data[[x+1]]['favorite'],\n        audio: new Audio(this.state.data[x+1]['mp3']),\n        currentSongEnd : false,\n        currentLoop : false,\n        load : true\n      }, () => {\n        this.state.audio.play()\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\n          this.setState({\n            currentDuration: e.target.duration,\n            load : false\n          })\n        })\n        this.state.audio.addEventListener('ended', (e) => {\n          this.detectChangeMusic(this.state.currentMusicIndex)\n        })\n      })\n    }\n    else {\n      this.setState({\n        play : false\n      })\n      this.state.audio.pause()\n    }\n  }\n  UpIndex() {\n    let x = this.state.currentMusicIndex + 1;\n    if (x < this.state.data.length) {\n      this.killAudio(x)\n      this.setState({\n        currentMusicId: this.state.data[x]['MusicId'],\n        currentmp3: this.state.data[x]['mp3'],\n        currentPictures: this.state.data[x]['Pictures'],\n        currentMusicId: this.state.data[x]['MusicID'],\n        currentAlbum: this.state.data[x]['Album'],\n        currentAuteur: this.state.data[x]['Auteur'],\n        currentGenre: this.state.data[x]['Genre'],\n        currentFavorite : this.state.data[x]['favorite'],\n        currentTitre: this.state.data[x]['Titre'],\n        audio: new Audio(this.state.data[x]['mp3']),\n        currentSongEnd : false,\n        currentLoop : false,\n      }, () => {\n        this.state.audio.play()\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\n          this.setState({\n            currentDuration: e.target.duration\n          })\n        })\n        this.state.audio.addEventListener('ended', (e) => {\n          this.detectChangeMusic(this.state.currentMusicIndex)\n        })\n      })\n    }\n  }\n  DownIndex() {\n    let x = this.state.currentMusicIndex - 1;\n    if (x >= 0) {\n      this.killAudio(x)\n      this.setState({\n        currentMusicId: this.state.data[x]['MusicId'],\n        currentmp3: this.state.data[x]['mp3'],\n        currentPictures: this.state.data[x]['Pictures'],\n        currentMusicId: this.state.data[x]['MusicID'],\n        currentAlbum: this.state.data[x]['Album'],\n        currentAuteur: this.state.data[x]['Auteur'],\n        currentGenre: this.state.data[x]['Genre'],\n        currentTitre: this.state.data[x]['Titre'],\n        currentFavorite : this.state.data[x]['favorite'],\n        audio: new Audio(this.state.data[x]['mp3']),\n        currentSongEnd : false,\n        currentLoop : false,\n      }, () => {\n        this.state.audio.play()\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\n          this.setState({\n            currentDuration: e.target.duration\n          })\n        })\n        this.state.audio.addEventListener('ended', (e) => {\n          this.detectChangeMusic(this.state.currentMusicIndex)\n        })\n      })\n    }\n  }\n  loop() {\n    this.setState({\n      currentLoop : this.state.currentLoop ? false : true\n    }, () => {\n      this.state.audio.loop = this.state.currentLoop\n    })\n  }\n  PlayMusic(state) {\n    if (state === 'play') {\n      this.state.audio.play();\n      this.setState({\n        play: true\n      })\n    } else if (state === 'pause') {\n      this.state.audio.pause();\n      this.setState({\n        play: false\n      })\n    }\n  }\n  handleChange(e) {\n    this.setState({\n      volume: e.target.value,\n    })\n  }\n  onChange(e) {\n    var x = (this.state.currentDuration / 100) * e.target.value\n    if (x >= this.state.currentDuration){\n      this.state.audio.pause()\n      this.setState({\n        play: true,\n        currentMusicIndex: x+1,\n        currentMusicId: this.state.data[this.state.currentIndex]['MusicId'],\n        currentmp3: this.state.data[this.state.currentIndex]['mp3'],\n        currentPictures: this.state.data[this.state.currentIndex]['Pictures'],\n        currentMusicId: this.state.data[this.state.currentIndex]['PMusicId'],\n        currentAlbum: this.state.data[this.state.currentIndex]['Album'],\n        currentAuteur: this.state.data[this.state.currentIndex]['Auteur'],\n        currentGenre: this.state.data[this.state.currentIndex]['Genre'],\n        currentTitre: this.state.data[this.state.currentIndex]['Titre'],\n        audio: new Audio(this.state.data[this.state.currentIndex]['mp3']),\n        currentSongEnd : false,\n        currentLoop : false,\n        load : true\n      }, () => {\n        this.state.audio.play()\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\n          this.setState({\n            currentDuration: e.target.duration,\n            load : false\n          })\n        })\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\n          this.setState({\n            currentSongEnd : true,\n          })\n        })\n      })\n    } else {\n      this.state.audio.currentTime = x\n      this.setState({\n        currentPlayed: x\n      })\n    }\n  }\n  render() {\n    setTimeout(() => {\n      if (this.state.play) {\n        this.setState({\n          currentPlayed: this.state.audio.currentTime\n        })\n      }\n    }, 500);\n    this.state.audio.volume = this.state.volume / 100\n    return (\n      <div className=\"Body\">\n        <div className=\"Navbar\">\n          <input type=\"search\" onChange={this.searchTracks} />\n        </div>\n        <div className=\"player\">\n          <div className=\"musicInfos\">\n            <div className=\"picturesPlayer\" style={{\n              backgroundImage: `url(${this.state.currentPictures})`\n            }}>\n            </div>\n            <div className=\"nameSong\">\n              <h5>\n                {\n                  this.state.currentTitre\n                }\n              </h5>\n            </div>\n          </div>\n\n          <div className=\"ContentPlayer\">\n\n            <div className=\"indicatorPlayer\">\n              <img src={ReplayIcon} onClick={this.loop} />\n              <img src={SkipPreviousIcon}\n                onClick={this.DownIndex}\n                style={{\n                  color: this.state.currentMusicIndex - 1 < 0 && '#F8F8F8'\n                }} />\n              {\n                !this.state.play\n                  ? <img src={PlayIcon} onClick={() => { this.PlayMusic('play') }} />\n                  : <img src={PauseIcon} onClick={() => { this.PlayMusic('pause') }} />\n              }\n              <img src={SkipNextIcon} onClick={this.UpIndex}\n                style={{\n                  color: this.state.currentMusicIndex + 1 > this.state.data.length - 1 && '#F8F8F8'\n                }} />\n              <img src={BlankIcon}\n                style={{}} />\n\n\n            </div>\n            <div className=\"ProgressBarPlayer\" style={{ width: \"50%\" }}>\n              <SliderMui percentage={this.state.firstLog && this.state.currentPlayed / this.state.currentDuration * 100} onChange={this.onChange}  />\n            </div>\n          </div>\n          <div className=\"volumeSlider\">\n            <Box sx={{ width: '100%' }}>\n              <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n                {\n                  this.state.volume > 0\n                    ? <img src={VolumeOffIcon} />\n                    : <img src={VolumeDown} />\n                }\n\n                <Slider aria-label=\"Volume\" value={this.state.volume} onChange={this.handleChange} />\n                <img src={VolumeUp} />\n              </Stack>\n            </Box>\n          </div>\n        </div>\n        <div className=\"ListOfTracks\">\n          {\n            this.state.data.length > 0\n            && this.state.data.map(\n              (row, index) =>\n                <div className=\"Tracks\" key={row.MusicID} onClick={() => { this.TrackChangeMusic(index) }}>\n                  <img src={row.Pictures} />\n                  <h5 className=\"titreTest\">{row.Titre}</h5>\n                  <h5>{row.Auteur}</h5>\n                  <h5>{row.Genre}</h5>\n                </div>\n\n            )\n          }\n        </div>\n      </div >\n    )\n  }\n}\n\n\n\n\n//  MusicPlayer(){\n//\n\n// }\nexport default MusicPlayer;\n"]},"metadata":{},"sourceType":"module"}