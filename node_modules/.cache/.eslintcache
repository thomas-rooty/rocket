[{"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\index.js":"1","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\App.js":"2","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Route\\PrivateRoute.js":"3","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\MusicPlayer\\MusicPlayer.js":"4","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Login\\Login.js":"5","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Route\\PublicRoute.js":"6","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\getMusic.js":"7","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\searchSongs.js":"8","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\verifyLogin.js":"9","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\slider\\Slider.js":"10","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\utils\\index.js":"11","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\getFavUser.js":"12","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\addFavUser.js":"13","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\deleteFavUser.js":"14","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Register\\Register.js":"15","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\registerUser.js":"16"},{"size":185,"mtime":1634211621371,"results":"17","hashOfConfig":"18"},{"size":892,"mtime":1634286402963,"results":"19","hashOfConfig":"18"},{"size":531,"mtime":1634211621365,"results":"20","hashOfConfig":"18"},{"size":23220,"mtime":1634296595195,"results":"21","hashOfConfig":"18"},{"size":2074,"mtime":1634211621363,"results":"22","hashOfConfig":"18"},{"size":428,"mtime":1634211621365,"results":"23","hashOfConfig":"18"},{"size":228,"mtime":1634211621370,"results":"24","hashOfConfig":"18"},{"size":250,"mtime":1634211621370,"results":"25","hashOfConfig":"18"},{"size":259,"mtime":1634211621371,"results":"26","hashOfConfig":"18"},{"size":1438,"mtime":1634211621369,"results":"27","hashOfConfig":"18"},{"size":377,"mtime":1634234821941,"results":"28","hashOfConfig":"18"},{"size":241,"mtime":1634233775681,"results":"29","hashOfConfig":"18"},{"size":282,"mtime":1634241315745,"results":"30","hashOfConfig":"18"},{"size":286,"mtime":1634241318576,"results":"31","hashOfConfig":"18"},{"size":2388,"mtime":1634286402964,"results":"32","hashOfConfig":"18"},{"size":308,"mtime":1634286402965,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1umfa4",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\index.js",[],["70","71"],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\App.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Route\\PrivateRoute.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\MusicPlayer\\MusicPlayer.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import React, { Component } from 'react';\r\nimport './MusicPlayer.css';\r\n\r\n//icons\r\nimport VolumeUp from '../icons/VolumeUppIcon.svg';\r\nimport VolumeOffIcon from '../icons/VolumeDownIcon.svg';\r\nimport VolumeDown from '../icons/VolumeOffIcon.svg';\r\nimport ReplayIcon from '../icons/loop.svg';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipNextIcon from '../icons/next.svg';\r\nimport SkipPreviousIcon from '../icons/previous.svg';\r\nimport PlayIcon from '../icons/play.svg';\r\nimport PauseIcon from '../icons/pause.svg';\r\nimport BlankIcon from '../icons/blank.png';\r\nimport Logo from '../icons/1F680.svg';\r\n\r\n\r\nimport LoopIcon from '@mui/icons-material/Loop';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\n\r\n\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport SliderMui from '../slider/Slider';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport AlbumIcon from '@mui/icons-material/Album';\r\n\r\n// api\r\nimport getMusic from '../../api/getMusic';\r\nimport searchSongs from '../../api/searchSongs';\r\nimport getFavUser from '../../api/getFavUser';\r\nimport addFavUser from '../../api/addFavUser';\r\nimport deleteFavUser from '../../api/deleteFavUser';\r\n\r\n\r\nimport { TOKEN_KEY, logout } from \"../../utils\";\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// DEV\r\nfunction secondsToHms(seconds) {\r\n  if (!seconds) return '00:00'\r\n\r\n  let duration = seconds\r\n  let hours = duration / 3600\r\n  duration = duration % 3600\r\n\r\n  let min = parseInt(duration / 60)\r\n  duration = duration % 60\r\n\r\n  let sec = parseInt(duration)\r\n\r\n  if (sec < 10) {\r\n    sec = `0${sec}`\r\n  }\r\n  if (min < 10) {\r\n    min = `0${min}`\r\n  }\r\n\r\n  if (parseInt(hours, 10) > 0) {\r\n    return `${parseInt(hours, 10)}h ${min}m ${sec}s`\r\n  } else if (min == 0) {\r\n    return `00:${sec}`\r\n  } else {\r\n    return `${min}:${sec}`\r\n  }\r\n}\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ width: '100%', mr: 1 }}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box sx={{ minWidth: 35 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">{secondsToHms(props.duration)}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nclass MusicPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadedDataMusic: false,\r\n      play: false,\r\n      audio: new Audio(),\r\n      data: [],\r\n      firstLog: false,\r\n      reload: false,\r\n      volume: 100,\r\n      load : false,\r\n      CurrentUp : true,\r\n      CurrentDown : true,\r\n      currentmp3: '',\r\n      currentPictures: '',\r\n      currentMusicId: '',\r\n      currentAlbum: '',\r\n      currentAuteur: '',\r\n      currentGenre: '',\r\n      currentTitre: '',\r\n      currentDuration: 0,\r\n      currentPlayed: 0,\r\n      currentMusicIndex: 0,\r\n      currentSongEnd : false,\r\n      currentFavorite : false,\r\n    }\r\n    this.myRef = React.createRef()\r\n    this.killAudio = this.killAudio.bind(this);\r\n    this.UpIndex = this.UpIndex.bind(this);\r\n    this.DownIndex = this.DownIndex.bind(this);\r\n    this.loop = this.loop.bind(this);\r\n    this.PlayMusic = this.PlayMusic.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.TrackChangeMusic = this.TrackChangeMusic.bind(this);\r\n    this.searchTracks = this.searchTracks.bind(this);\r\n    this.GetFavMusicUser = this.GetFavMusicUser.bind(this);\r\n    this.addFav = this.addFav.bind(this);\r\n    this.deleteFav = this.deleteFav.bind(this);\r\n    this.returnListMusic = this.returnListMusic.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      audio : new Audio()\r\n    })\r\n    getMusic().then(\r\n      result => {\r\n        this.setState({\r\n          data : result\r\n        })\r\n    })\r\n    .then(\r\n      getFavUser(localStorage.getItem(TOKEN_KEY)).then(\r\n        fav => {\r\n          fav.map(\r\n            rowfav => {\r\n              this.state.data.map(\r\n                x => {\r\n                  if (x['favorite'] === false || x['favorite'] === undefined ){\r\n                    if(x['MusicID'] === rowfav['MusicID']){\r\n                      x['favorite'] = true\r\n                    } else {\r\n                      x['favorite'] = false\r\n                    }\r\n                  }\r\n                }\r\n              )\r\n            }\r\n          )\r\n          this.setState({\r\n            firstLog: true,\r\n            currentmp3: this.state.data[this.state.currentMusicIndex]['mp3'],\r\n            currentPictures: this.state.data[this.state.currentMusicIndex]['Pictures'],\r\n            currentMusicId: this.state.data[this.state.currentMusicIndex]['MusicID'],\r\n            currentAlbum: this.state.data[this.state.currentMusicIndex]['Album'],\r\n            currentAuteur: this.state.data[this.state.currentMusicIndex]['Auteur'],\r\n            currentGenre: this.state.data[this.state.currentMusicIndex]['Genre'],\r\n            currentTitre: this.state.data[this.state.currentMusicIndex]['Titre'],\r\n            currentFavorite : this.state.data[this.state.currentMusicIndex]['favorite'],\r\n            currentSongEnd : false,\r\n            audio: new Audio(this.state.data[this.state.currentMusicIndex]['mp3']),\r\n            CurrentUp : true,\r\n            CurrentDown : true,\r\n            currentLoop : false,\r\n          }, () => {\r\n            this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n              this.setState({\r\n                currentDuration: e.target.duration\r\n              })\r\n            })\r\n            this.state.audio.addEventListener('ended', (e) => {\r\n              this.detectChangeMusic(this.state.currentMusicIndex)\r\n            })\r\n          })\r\n        }\r\n      )\r\n    )\r\n  }\r\n  searchTracks(e) {\r\n    if (e.target.value == '') {\r\n      this.state.audio.pause()\r\n      getMusic().then(\r\n        result => {\r\n          this.setState({\r\n            firstLog: true,\r\n            data: result,\r\n          })\r\n        }\r\n      )\r\n      .then(\r\n        getFavUser(localStorage.getItem(TOKEN_KEY)).then(\r\n          fav => {\r\n            fav.map(\r\n              rowfav => {\r\n                this.state.data.map(\r\n                  x => {\r\n                    if (x['favorite'] === false || x['favorite'] === undefined ){\r\n                      if(x['MusicID'] === rowfav['MusicID']){\r\n                        x['favorite'] = true\r\n                      } else {\r\n                        x['favorite'] = false\r\n                      }\r\n                    }\r\n                  }\r\n                )\r\n              }\r\n            )\r\n          }\r\n        )\r\n      )\r\n    } else {\r\n      searchSongs(e.target.value).then(\r\n        songs => {\r\n          this.setState({\r\n            data: songs\r\n          })\r\n        }\r\n      )\r\n      .then(\r\n        getFavUser(localStorage.getItem(TOKEN_KEY)).then(\r\n          fav => {\r\n            fav.map(\r\n              rowfav => {\r\n                this.state.data.map(\r\n                  x => {\r\n                    if (x['favorite'] === false || x['favorite'] === undefined ){\r\n                      if(x['MusicID'] === rowfav['MusicID']){\r\n                        x['favorite'] = true\r\n                      } else {\r\n                        x['favorite'] = false\r\n                      }\r\n                    }\r\n                  }\r\n                )\r\n              }\r\n            )\r\n          }\r\n        )\r\n      )\r\n    }\r\n\r\n  }\r\n  TrackChangeMusic(x) {\r\n    this.killAudio(x)\r\n    this.setState({\r\n      currentmp3: this.state.data[x]['mp3'],\r\n      currentPictures: this.state.data[x]['Pictures'],\r\n      currentMusicId: this.state.data[x]['MusicID'],\r\n      currentAlbum: this.state.data[x]['Album'],\r\n      currentAuteur: this.state.data[x]['Auteur'],\r\n      currentFavorite : this.state.data[x]['favorite'],\r\n      currentGenre: this.state.data[x]['Genre'],\r\n      currentTitre: this.state.data[x]['Titre'],\r\n      audio: new Audio(this.state.data[x]['mp3']),\r\n      CurrentUp : true,\r\n      CurrentDown : true,\r\n      currentLoop : false,\r\n    }, () => {\r\n      this.state.audio.play()\r\n      this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n        this.setState({\r\n          currentDuration: e.target.duration\r\n        })\r\n      })\r\n      this.state.audio.addEventListener('ended', (e) => {\r\n        this.detectChangeMusic(this.state.currentMusicIndex)\r\n      })\r\n    })\r\n  }\r\n  killAudio(x) {\r\n    this.state.audio.pause()\r\n    this.setState({\r\n      play: true,\r\n      currentMusicIndex: x,\r\n    })\r\n  }\r\n  //FAV\r\n  GetFavMusicUser(){\r\n    document.getElementById('checkbox').checked = false\r\n    getFavUser(localStorage.getItem(TOKEN_KEY)).then(\r\n      result =>\r\n      {\r\n        result.map(x => {\r\n          x['favorite'] = true\r\n        })\r\n        this.setState({\r\n          data : result,\r\n          CurrentUp : false,\r\n          CurrentDown : false,\r\n        })\r\n      }\r\n    )\r\n  }\r\n  addFav(musicID, token){\r\n    addFavUser(token,musicID)\r\n    .then(\r\n      x => {\r\n        this.state.data.map(\r\n          row => {\r\n            if (row['MusicID'] === musicID){\r\n              row['favorite'] = true\r\n              this.setState({\r\n                reload : true\r\n              }, () =>{\r\n                this.setState({\r\n                  reload : false\r\n                })\r\n              })\r\n            }\r\n          }\r\n        )\r\n        if (musicID === this.state.currentMusicId){\r\n          this.setState({\r\n            currentFavorite : true\r\n          })\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n  deleteFav(musicID, token){\r\n    deleteFavUser(token,musicID)\r\n    .then(\r\n      x => {\r\n        this.state.data.map(\r\n          row => {\r\n            if (row['MusicID'] === musicID){\r\n              row['favorite'] = false\r\n              this.setState({\r\n                reload : true\r\n              }, () =>{\r\n                this.setState({\r\n                  reload : false\r\n                })\r\n              })\r\n            }\r\n          }\r\n        )\r\n        if (musicID === this.state.currentMusicId){\r\n          this.setState({\r\n            currentFavorite : false\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n  returnListMusic(){\r\n    document.getElementById('checkbox').checked = false\r\n    getMusic().then(\r\n      result => {\r\n        this.setState({\r\n          data : result\r\n        })\r\n    })\r\n    .then(\r\n      getFavUser(localStorage.getItem(TOKEN_KEY)).then(\r\n        fav => {\r\n          fav.map(\r\n            rowfav => {\r\n              this.state.data.map(\r\n                x => {\r\n                  if (x['favorite'] === false || x['favorite'] === undefined ){\r\n                    if(x['MusicID'] === rowfav['MusicID']){\r\n                      x['favorite'] = true\r\n                    } else {\r\n                      x['favorite'] = false\r\n                    }\r\n                  }\r\n                }\r\n              )\r\n              this.setState({\r\n                data : this.state.data\r\n              })\r\n            }\r\n          )\r\n        }\r\n      )\r\n    )\r\n  }\r\n\r\n  detectChangeMusic(x){\r\n    if (x+1 < this.state.data.length) {\r\n      this.state.audio.pause()\r\n      this.setState({\r\n        play: true,\r\n        currentMusicIndex: x+1,\r\n        currentmp3: this.state.data[x+1]['mp3'],\r\n        currentPictures: this.state.data[x+1]['Pictures'],\r\n        currentMusicId: this.state.data[x+1]['MusicID'],\r\n        currentAlbum: this.state.data[x+1]['Album'],\r\n        currentAuteur: this.state.data[x+1]['Auteur'],\r\n        currentGenre: this.state.data[x+1]['Genre'],\r\n        currentTitre: this.state.data[x+1]['Titre'],\r\n        currentFavorite : this.state.data[[x+1]]['favorite'],\r\n        audio: new Audio(this.state.data[x+1]['mp3']),\r\n        CurrentUp : true,\r\n        CurrentDown : true,\r\n        currentSongEnd : false,\r\n        currentLoop : false,\r\n        load : true\r\n      }, () => {\r\n        this.state.audio.play()\r\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n          this.setState({\r\n            currentDuration: e.target.duration,\r\n            load : false\r\n          })\r\n        })\r\n        this.state.audio.addEventListener('ended', (e) => {\r\n          this.detectChangeMusic(this.state.currentMusicIndex)\r\n        })\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        play : false\r\n      })\r\n      this.state.audio.pause()\r\n    }\r\n  }\r\n  UpIndex() {\r\n    if (this.state.CurrentUp) {\r\n      let x = this.state.currentMusicIndex + 1;\r\n      if (x < this.state.data.length) {\r\n        this.killAudio(x)\r\n        this.setState({\r\n          currentMusicId: this.state.data[x]['MusicId'],\r\n          currentmp3: this.state.data[x]['mp3'],\r\n          currentPictures: this.state.data[x]['Pictures'],\r\n          currentMusicId: this.state.data[x]['MusicID'],\r\n          currentAlbum: this.state.data[x]['Album'],\r\n          currentAuteur: this.state.data[x]['Auteur'],\r\n          currentGenre: this.state.data[x]['Genre'],\r\n          currentFavorite : this.state.data[x]['favorite'],\r\n          currentTitre: this.state.data[x]['Titre'],\r\n          audio: new Audio(this.state.data[x]['mp3']),\r\n          CurrentUp : true,\r\n          CurrentDown : true,\r\n          currentSongEnd : false,\r\n          currentLoop : false,\r\n        }, () => {\r\n          this.state.audio.play()\r\n          this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n            this.setState({\r\n              currentDuration: e.target.duration\r\n            })\r\n          })\r\n          this.state.audio.addEventListener('ended', (e) => {\r\n            this.detectChangeMusic(this.state.currentMusicIndex)\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n  DownIndex() {\r\n    if (this.state.CurrentDown) {\r\n      let x = this.state.currentMusicIndex - 1;\r\n      if (x >= 0) {\r\n        this.killAudio(x)\r\n        this.setState({\r\n          currentMusicId: this.state.data[x]['MusicId'],\r\n          currentmp3: this.state.data[x]['mp3'],\r\n          currentPictures: this.state.data[x]['Pictures'],\r\n          currentMusicId: this.state.data[x]['MusicID'],\r\n          currentAlbum: this.state.data[x]['Album'],\r\n          currentAuteur: this.state.data[x]['Auteur'],\r\n          currentGenre: this.state.data[x]['Genre'],\r\n          currentTitre: this.state.data[x]['Titre'],\r\n          currentFavorite : this.state.data[x]['favorite'],\r\n          audio: new Audio(this.state.data[x]['mp3']),\r\n          CurrentUp : true,\r\n          CurrentDown : true,\r\n          currentSongEnd : false,\r\n          currentLoop : false,\r\n        }, () => {\r\n          this.state.audio.play()\r\n          this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n            this.setState({\r\n              currentDuration: e.target.duration\r\n            })\r\n          })\r\n          this.state.audio.addEventListener('ended', (e) => {\r\n            this.detectChangeMusic(this.state.currentMusicIndex)\r\n          })\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  loop() {\r\n    this.setState({\r\n      currentLoop : this.state.currentLoop ? false : true\r\n    }, () => {\r\n      this.state.audio.loop = this.state.currentLoop\r\n    })\r\n  }\r\n  PlayMusic(state) {\r\n    if (state === 'play') {\r\n      this.state.audio.play();\r\n      this.setState({\r\n        play: true\r\n      })\r\n    } else if (state === 'pause') {\r\n      this.state.audio.pause();\r\n      this.setState({\r\n        play: false\r\n      })\r\n    }\r\n  }\r\n  handleChange(e) {\r\n    this.setState({\r\n      volume: e.target.value,\r\n    })\r\n  }\r\n  onChange(e) {\r\n    var x = (this.state.currentDuration / 100) * e.target.value\r\n    if (x >= this.state.currentDuration){\r\n      this.state.audio.pause()\r\n      this.setState({\r\n        play: true,\r\n        currentMusicIndex: x+1,\r\n        currentMusicId: this.state.data[this.state.currentIndex]['MusicId'],\r\n        currentmp3: this.state.data[this.state.currentIndex]['mp3'],\r\n        currentPictures: this.state.data[this.state.currentIndex]['Pictures'],\r\n        currentMusicId: this.state.data[this.state.currentIndex]['PMusicId'],\r\n        currentAlbum: this.state.data[this.state.currentIndex]['Album'],\r\n        currentAuteur: this.state.data[this.state.currentIndex]['Auteur'],\r\n        currentGenre: this.state.data[this.state.currentIndex]['Genre'],\r\n        currentTitre: this.state.data[this.state.currentIndex]['Titre'],\r\n        audio: new Audio(this.state.data[this.state.currentIndex]['mp3']),\r\n        currentSongEnd : false,\r\n        currentLoop : false,\r\n        load : true\r\n      }, () => {\r\n        this.state.audio.play()\r\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n          this.setState({\r\n            currentDuration: e.target.duration,\r\n            load : false\r\n          })\r\n        })\r\n        this.state.audio.addEventListener('loadedmetadata', (e) => {\r\n          this.setState({\r\n            currentSongEnd : true,\r\n          })\r\n        })\r\n      })\r\n    } else {\r\n      this.state.audio.currentTime = x\r\n      this.setState({\r\n        currentPlayed: x\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    setTimeout(() => {\r\n      if (this.state.play) {\r\n        this.setState({\r\n          currentPlayed: this.state.audio.currentTime\r\n        })\r\n      }\r\n    }, 1000);\r\n    this.state.audio.volume = this.state.volume / 100\r\n    return (\r\n      <div className=\"Body\">\r\n        <div className=\"Navbar\">\r\n          <nav role=\"navigation\">\r\n            <div id=\"menuToggle\">\r\n              <input type=\"checkbox\" id=\"checkbox\"/>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <ul id=\"menu\">\r\n                <p onClick={\r\n                    this.returnListMusic\r\n                  }><li><AlbumIcon/> <p>Liste des musiques</p></li></p>\r\n                <p onClick={\r\n                    this.GetFavMusicUser\r\n                  }><li><FavoriteIcon/> <p>Favoris</p></li></p>\r\n                <p onClick={\r\n                    () => {\r\n                      logout()\r\n                      this.props.history.push('/')\r\n                    }\r\n                }><li><AccountCircleIcon/> <p>Deconnexion</p></li></p>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n          <img src={Logo}/>\r\n          <input type=\"search\" id=\"searchNavbar\"onChange={this.searchTracks} />\r\n        </div>\r\n        <div className=\"player\" >\r\n          <div className=\"musicInfos\">\r\n            <div className=\"picturesPlayer\" style={{\r\n              backgroundImage: `url(${this.state.currentPictures})`\r\n            }}>\r\n            </div>\r\n            <div className=\"nameSong\">\r\n              <h5>\r\n                {\r\n                  this.state.currentTitre\r\n                }\r\n              </h5>\r\n            </div>\r\n            <div className=\"expendInfoSong\">\r\n              <ExpandLessIcon/>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"ContentPlayer\">\r\n\r\n            <div className=\"indicatorPlayer\">\r\n              {\r\n                this.state.currentLoop\r\n                ? <img src={ReplayIcon} onClick={this.loop} />\r\n                : <LoopIcon sx={{ fontSize: 50 , color:\"white\"}}onClick={this.loop}/>\r\n              }\r\n              <img src={SkipPreviousIcon}\r\n                onClick={this.DownIndex}\r\n                style={{\r\n                  cursor : 'pointer',\r\n                  color: this.state.currentMusicIndex - 1 < 0 && '#F8F8F8'\r\n                }} />\r\n              {\r\n                !this.state.play\r\n                  ? <img src={PlayIcon} onClick={() => { this.PlayMusic('play') }} />\r\n                  : <img src={PauseIcon} onClick={() => { this.PlayMusic('pause') }} />\r\n              }\r\n              <img src={SkipNextIcon} onClick={this.UpIndex}\r\n                style={{\r\n                  cursor : 'pointer',\r\n                  color: this.state.currentMusicIndex + 1 > this.state.data.length - 1 && '#F8F8F8'\r\n                }} />\r\n                {\r\n                  !this.state.currentFavorite\r\n                  ? <FavoriteBorderIcon onClick={() => {this.addFav(this.state.currentMusicId, localStorage.getItem(TOKEN_KEY))}} sx={{ fontSize: 50 , color:\"white\"}}/>\r\n                : <FavoriteIcon onClick={ () => {this.deleteFav(this.state.currentMusicId, localStorage.getItem(TOKEN_KEY))}} sx={{ fontSize: 50 , color:\"white\"}}/>\r\n                }\r\n\r\n\r\n            </div>\r\n            <div className=\"ProgressBarPlayer\" style={{ width: \"50%\" }}>\r\n              <div className=\"currentTimeProgressBar\">\r\n                {\r\n                  secondsToHms(this.state.currentPlayed)\r\n                }\r\n              </div>\r\n              <SliderMui percentage={this.state.firstLog && this.state.currentPlayed / this.state.currentDuration * 100} onChange={this.onChange}  />\r\n              <div className=\"timerProgressBar\">\r\n                {\r\n                  secondsToHms(this.state.currentDuration - this.state.currentPlayed)\r\n                }\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"volumeSlider\">\r\n            <Box sx={{ width: '100%' }}>\r\n              <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\r\n                {\r\n                  this.state.volume > 0\r\n                    ? <img src={VolumeOffIcon} />\r\n                    : <img src={VolumeDown} />\r\n                }\r\n\r\n                <Slider aria-label=\"Volume\" value={this.state.volume} onChange={this.handleChange} />\r\n                <img src={VolumeUp} />\r\n              </Stack>\r\n            </Box>\r\n          </div>\r\n        </div>\r\n        <div className=\"ListOfTracks\">\r\n          {\r\n            this.state.data.length > 0\r\n            && this.state.data.map(\r\n              (row, index) =>\r\n              <div>\r\n                <div className=\"Tracks\" style={{cursor : 'pointer'}}>\r\n                  <div className=\"AuteurPlusImgPlustitre\" key={row.MusicID} onClick={() => { this.TrackChangeMusic(index) }}>\r\n                    <div className=\"ImgPlusTitreTracks\">\r\n                      <img src={row.Pictures} />\r\n                      <h5 className=\"titreTest\">{row.Titre}</h5>\r\n                    </div>\r\n                    <h5 className=\"AuteurTracks\">{row.Auteur}</h5>\r\n                  </div>\r\n                    <div className=\"CoeurAuMillieu\">\r\n                    {\r\n                        !row['favorite']\r\n                        ? <FavoriteBorderIcon onClick={() => {this.addFav(row.MusicID, localStorage.getItem(TOKEN_KEY))}} color='white' sx={{ fontSize: 50, color:'white'}}/>\r\n                      : <FavoriteIcon onClick={ () => {this.deleteFav(row.MusicID, localStorage.getItem(TOKEN_KEY))}} color='white' sx={{ fontSize: 50, color:'white'}}/>\r\n                    }\r\n                    </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n            )\r\n          }\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//  MusicPlayer(){\r\n//\r\n\r\n// }\r\nexport default MusicPlayer;\r\n","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Login\\Login.js",["105"],"import React, { useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Login.css\";\r\nimport verifyLogin from \"../../api/verifyLogin\";\r\nimport { login, logout} from \"../../utils\";\r\nimport { useHistory } from \"react-router\";\r\nimport { sha512 } from 'js-sha512';\r\n\r\nexport default function Login(props) {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        verifyLogin(email, sha512(password))\r\n        .then(data=>{\r\n            if (data.length > 0) {\r\n                login(data[0].UserID);\r\n                setTimeout(() => {\r\n                  history.push({\r\n                    pathname : '/player'\r\n                  })\r\n                }, 500)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Route\\PublicRoute.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\getMusic.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\searchSongs.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\verifyLogin.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\slider\\Slider.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\utils\\index.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\getFavUser.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\addFavUser.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\deleteFavUser.js",[],"C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\Components\\Register\\Register.js",["106","107"],"import React, { useState } from 'react';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./Register.css\";\r\nimport registerUser from \"../../api/registerUser\";\r\nimport { login, logout } from \"../../utils\";\r\nimport { useHistory } from \"react-router\";\r\nimport { sha512 } from 'js-sha512';\r\n\r\nexport default function Register(props) {\r\n    const history = useHistory();\r\n    const [pseudo, setPseudo] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return pseudo.length > 0 && email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        registerUser(pseudo, email, sha512(password))\r\n            .then(\r\n                history.push({\r\n                    pathname: '/login'\r\n                })\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"pseudo\">\r\n                    <Form.Label>Pseudo</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"text\"\r\n                        value={pseudo}\r\n                        onChange={(e) => setPseudo(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\artho\\Desktop\\COURS IPSSI\\Fondamentaux Web, GIT\\5\\rocket\\src\\api\\registerUser.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":17},{"ruleId":"112","severity":1,"message":"117","line":44,"column":10,"nodeType":"114","messageId":"115","endLine":44,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":68,"column":18,"nodeType":"120","messageId":"121","endLine":68,"endColumn":20},{"ruleId":"112","severity":1,"message":"122","line":74,"column":10,"nodeType":"114","messageId":"115","endLine":74,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":142,"column":20,"nodeType":"125","messageId":"126","endLine":142,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":144,"column":19,"nodeType":"125","messageId":"126","endLine":144,"endColumn":21},{"ruleId":"118","severity":1,"message":"119","line":186,"column":24,"nodeType":"120","messageId":"121","endLine":186,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":200,"column":22,"nodeType":"125","messageId":"126","endLine":200,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":202,"column":21,"nodeType":"125","messageId":"126","endLine":202,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":229,"column":22,"nodeType":"125","messageId":"126","endLine":229,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":231,"column":21,"nodeType":"125","messageId":"126","endLine":231,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":289,"column":22,"nodeType":"125","messageId":"126","endLine":289,"endColumn":24},{"ruleId":"123","severity":1,"message":"124","line":305,"column":15,"nodeType":"125","messageId":"126","endLine":305,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":332,"column":15,"nodeType":"125","messageId":"126","endLine":332,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":365,"column":20,"nodeType":"125","messageId":"126","endLine":365,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":367,"column":19,"nodeType":"125","messageId":"126","endLine":367,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":436,"column":11,"nodeType":"129","messageId":"121","endLine":436,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":470,"column":11,"nodeType":"129","messageId":"121","endLine":470,"endColumn":25},{"ruleId":"130","severity":1,"message":"131","line":501,"column":7,"nodeType":"132","messageId":"133","endLine":501,"endColumn":23},{"ruleId":"127","severity":1,"message":"128","line":532,"column":9,"nodeType":"129","messageId":"121","endLine":532,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":556,"column":7,"nodeType":"132","messageId":"133","endLine":556,"endColumn":23},{"ruleId":"130","severity":1,"message":"131","line":570,"column":5,"nodeType":"132","messageId":"133","endLine":570,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":596,"column":11,"nodeType":"136","endLine":596,"endColumn":28},{"ruleId":"134","severity":1,"message":"135","line":622,"column":19,"nodeType":"136","endLine":622,"endColumn":63},{"ruleId":"134","severity":1,"message":"135","line":625,"column":15,"nodeType":"136","endLine":630,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":633,"column":21,"nodeType":"136","endLine":633,"endColumn":86},{"ruleId":"134","severity":1,"message":"135","line":634,"column":21,"nodeType":"136","endLine":634,"endColumn":88},{"ruleId":"134","severity":1,"message":"135","line":636,"column":15,"nodeType":"136","endLine":640,"endColumn":22},{"ruleId":"134","severity":1,"message":"135","line":669,"column":23,"nodeType":"136","endLine":669,"endColumn":50},{"ruleId":"134","severity":1,"message":"135","line":670,"column":23,"nodeType":"136","endLine":670,"endColumn":47},{"ruleId":"134","severity":1,"message":"135","line":674,"column":17,"nodeType":"136","endLine":674,"endColumn":39},{"ruleId":"134","severity":1,"message":"135","line":688,"column":23,"nodeType":"136","endLine":688,"endColumn":49},{"ruleId":"112","severity":1,"message":"137","line":7,"column":17,"nodeType":"114","messageId":"115","endLine":7,"endColumn":23},{"ruleId":"112","severity":1,"message":"138","line":7,"column":10,"nodeType":"114","messageId":"115","endLine":7,"endColumn":15},{"ruleId":"112","severity":1,"message":"137","line":7,"column":17,"nodeType":"114","messageId":"115","endLine":7,"endColumn":23},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'PlayArrowIcon' is defined but never used.","Identifier","unusedVar","'BlankIcon' is defined but never used.","'withRouter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'LinearProgressWithLabel' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'currentMusicId'.","ObjectExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logout' is defined but never used.","'login' is defined but never used.","no-global-assign","no-unsafe-negation"]