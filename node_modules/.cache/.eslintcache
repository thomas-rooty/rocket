[{"C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\index.js":"1","C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\App.js":"2","C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\Components\\MusicPlayer\\MusicPlayer.js":"3","C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\api\\getMusic.js":"4"},{"size":176,"mtime":1634027712000,"results":"5","hashOfConfig":"6"},{"size":354,"mtime":1634072184000,"results":"7","hashOfConfig":"6"},{"size":3100,"mtime":1634119956000,"results":"8","hashOfConfig":"6"},{"size":228,"mtime":1634117066000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"coasp",{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\index.js",[],"C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\App.js",[],"C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\Components\\MusicPlayer\\MusicPlayer.js",["19","20"],"import React, { Component } from 'react';\r\nimport './MusicPlayer.css';\r\n\r\n//icons\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\n\r\nimport ReplayIcon from '@mui/icons-material/Replay';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\n\r\n// api\r\n\r\nimport getMusic from '../../api/getMusic';\r\n\r\n// DEV\r\n\r\nclass MusicPlayer extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      musicIndex : 0,\r\n      loadedDataMusic : false,\r\n      play : false,\r\n      audio : [],\r\n      data : []\r\n    }\r\n    this.killAudio = this.killAudio.bind(this);\r\n    this.UpIndex = this.UpIndex.bind(this);\r\n    this.DownIndex = this.DownIndex.bind(this);\r\n    this.loop = this.loop.bind(this);\r\n    this.PlayMusic = this.PlayMusic.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    getMusic().then(\r\n      result => this.setState({\r\n        data : result,\r\n        audio : new Audio(result[0][\"mp3\"])\r\n      })\r\n    )\r\n  }\r\n   killAudio(x){\r\n     this.state.audio.pause()\r\n     this.setState({\r\n       musicIndex : x,\r\n       play : true,\r\n       audio : new Audio(this.state.data[x][\"mp3\"])\r\n     })\r\n  }\r\n   UpIndex(){\r\n    let x = this.state.musicIndex + 1;\r\n    if (x < this.state.data.length) {\r\n      this.killAudio(x)\r\n    }\r\n  }\r\n   DownIndex(){\r\n    let x = this.state.musicIndex - 1;\r\n    if (x >= 0){\r\n      this.killAudio(x)\r\n    }\r\n  }\r\n   loop(){\r\n    this.state.audio.loop = true\r\n  }\r\n   PlayMusic(state){\r\n    if (state === 'play') {\r\n      this.state.audio.play();\r\n      this.setState({\r\n        play : true\r\n      })\r\n    } else if (state === 'pause') {\r\n      this.state.audio.pause();\r\n      this.setState({\r\n        play : false\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    console.log(this.state.data)\r\n    if (this.state.play === true) {\r\n      this.state.audio.play()\r\n    }\r\n    return (\r\n      <div className=\"player\">\r\n        <div className=\"picturesPlayer\">\r\n          <div className=\"NameSong\">\r\n            <h5>\r\n            {\r\n              this.state.data[this.state.musicIndex]\r\n              && this.state.data[this.state.musicIndex]['Titre']\r\n            }\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <div className=\"ContentPlayer\">\r\n          <div className=\"ProgressBarPlayer\">\r\n          </div>\r\n          <div className=\"indicatorPlayer\">\r\n            <ReplayIcon onClick={this.loop}/>\r\n            <SkipPreviousIcon\r\n              onClick={this.DownIndex}/>\r\n            {\r\n              !this.state.play\r\n              ? <PlayArrowIcon onClick={() => {this.PlayMusic('play')}}/>\r\n            : <PauseIcon onClick={() => {this.PlayMusic('pause')}}/>\r\n            }\r\n\r\n            <VolumeUpIcon/>\r\n            <SkipNextIcon onClick={this.UpIndex}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//  MusicPlayer(){\r\n//\r\n\r\n// }\r\nexport default MusicPlayer;\r\n","C:\\Users\\WKS-TCARON-HOME\\Desktop\\Projects\\rocket\\src\\api\\getMusic.js",[],{"ruleId":"21","severity":1,"message":"22","line":6,"column":8,"nodeType":"23","messageId":"24","endLine":6,"endColumn":21},{"ruleId":"25","severity":1,"message":"26","line":65,"column":5,"nodeType":"27","messageId":"28","endLine":65,"endColumn":21},"no-unused-vars","'VolumeOffIcon' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation"]